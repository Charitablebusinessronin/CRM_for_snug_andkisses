services:
  snugs-kisses-crm:
    build: .
    container_name: snugs-kisses-crm-dev
    ports:
      - "5369:5369"
    environment:
      - NODE_ENV=development
      - PORT=5369
      - NEXTAUTH_URL=http://localhost:5369
      - NEXTAUTH_SECRET=docker-super-secret-jwt-key-for-development-minimum-32-characters-long-secure
      - NEXT_PUBLIC_APP_URL=http://localhost:5369
      - EXPRESS_BACKEND_URL=http://express-backend:4728
      - HIPAA_CLOUD_BACKUP=false
      - SESSION_TIMEOUT=900000
      - TOKEN_ROTATION_INTERVAL=86400000
      # Zoho CRM API Credentials - Replace with your actual values
      - ZOHO_CLIENT_ID=YOUR_ZOHO_CLIENT_ID
      - ZOHO_CLIENT_SECRET=YOUR_ZOHO_CLIENT_SECRET
      - ZOHO_REFRESH_TOKEN=YOUR_ZOHO_REFRESH_TOKEN
      - ZOHO_CRM_API_URL=https://www.zohoapis.com/crm/v2
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - audit-logs:/app/logs
    networks:
      - crm-network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - express-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5369/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL database for future use
  postgres:
    image: postgres:15-alpine
    container_name: snugs-kisses-db
    environment:
      POSTGRES_DB: snugs_kisses_crm
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: secure_password_2025
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - crm-network
    restart: unless-stopped

  # Redis for session storage and caching  
  redis:
    image: redis:7-alpine
    container_name: snugs-kisses-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - crm-network
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass secure_redis_password_2025_production
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "secure_redis_password_2025_production", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # TypeScript Express Backend API Server (Replacement)
  express-backend:
    build:
      context: ./sabir-crm-typescript
      dockerfile: Dockerfile
    container_name: snugs-kisses-express-api
    ports:
      - "4728:4728"
    environment:
      - NODE_ENV=production
      - PORT=4728
      - HIPAA_COMPLIANCE_MODE=true
      - ENABLE_AUDIT_LOGGING=true
      - DATABASE_URL=postgresql://crm_user:secure_password_2025@postgres:5432/snugs_kisses_crm
      - REDIS_URL=redis://:secure_redis_password_2025_production@redis:6379
    volumes:
      - ./sabir-crm-typescript:/app
      - /app/node_modules
      - audit-logs:/app/logs
    networks:
      - crm-network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4728/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Playwright test runner (containerized)
  playwright:
    image: mcr.microsoft.com/playwright:v1.46.0-noble
    container_name: snug-playwright
    working_dir: /work
    volumes:
      - .:/work
    networks:
      - crm-network
    depends_on:
      - snugs-kisses-crm
      - express-backend
    environment:
      - NEXT_PUBLIC_APP_URL=http://snugs-kisses-crm:5369
    entrypoint: ["bash","-lc"]
    command: |
      npm ci && \
      npx playwright install --with-deps && \
      npm run test:e2e

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  audit-logs:
    driver: local

networks:
  crm-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1