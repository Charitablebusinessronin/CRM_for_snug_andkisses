/**
 * PHASE 5: INTERVIEW COORDINATION WORKFLOW
 * Priya Sharma - Zoho Stack Specialist
 * Automated doula meet-and-greet scheduling and coordination
 */

const catalyst = require('zcatalyst-sdk-node');

class InterviewCoordinationWorkflow {
    constructor() {
        this.app = catalyst.initialize();
        this.crm = this.app.crm();
        this.bookings = this.app.bookings();
        this.mail = this.app.sendmail(); 
        this.datastore = this.app.datastore();
        this.calendar = this.app.calendar();
    }

    /**
     * Initialize Interview Coordination Service
     */
    async initializeCoordinationService() {
        const meetGreetConfig = {
            service_name: "Doula Meet & Greet",
            description: "15-minute video call to connect with your matched doula",
            duration: 15, // minutes
            buffer_time: 5, // minutes between meetings
            price: 0, // Free consultation
            location_type: "video_call",
            max_bookings_per_day: 12,
            advance_booking_time: 4, // hours
            cancellation_policy: "2_hours",
            staff_assignment: "specific_staff", // Allow client to choose doula
            booking_questions: [
                {
                    question: "Which doula would you like to meet?",
                    type: "dropdown",
                    required: true,
                    options: [] // Will be populated dynamically
                },
                {
                    question: "What questions do you want to ask?",
                    type: "textarea",
                    required: false
                },
                {
                    question: "Preferred time of day?",
                    type: "radio",
                    required: true,
                    options: ["Morning (8-12pm)", "Afternoon (12-5pm)", "Evening (5-8pm)"]
                }
            ]
        };

        try {
            const service = await this.bookings.createService(meetGreetConfig);
            console.log("‚úÖ Meet & Greet Service Created:", service.service_id);
            return service;
        } catch (error) {
            console.error("‚ùå Service Creation Failed:", error);
            return null;
        }
    }

    /**
     * Send Interview Coordination Email
     */
    async sendInterviewCoordinationEmail(clientData, matchedDoulas) {
        const coordinationEmailHtml = this.generateCoordinationEmail(clientData, matchedDoulas);
        
        const emailConfig = {
            to: [{ 
                email: clientData.email, 
                name: clientData.first_name 
            }],
            from: { 
                email: "hello@snugandkisses.com", 
                name: "Snug & Kisses Care Team" 
            },
            subject: `Time to meet your doulas! üìÖ Schedule your meet-and-greets`,
            html_body: coordinationEmailHtml
        };

        try {
            const emailResponse = await this.mail.sendMail(emailConfig);
            console.log("‚úÖ Coordination email sent:", emailResponse.message_id);
            return emailResponse;
        } catch (error) {
            console.error("‚ùå Coordination email failed:", error);
            throw error;
        }
    }

    /**
     * Generate Coordination Email HTML
     */
    generateCoordinationEmail(clientData, matchedDoulas) {
        const doulaOptionsHtml = matchedDoulas.map(doula => `
            <div style="border: 1px solid #e0e0e0; border-radius: 8px; padding: 15px; margin: 10px 0; background: white;">
                <div style="display: flex; align-items: center; gap: 15px;">
                    <img src="${doula.profile_image_url}" alt="${doula.first_name}" 
                         style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover;">
                    <div style="flex: 1;">
                        <h4 style="margin: 0; color: #8b4513;">${doula.first_name} ${doula.last_name}</h4>
                        <p style="margin: 5px 0; color: #666; font-size: 14px;">
                            ${doula.years_experience} years ‚Ä¢ ${doula.specializations.slice(0, 2).join(', ')}
                        </p>
                        <div style="background: #e8f5e8; padding: 4px 8px; border-radius: 12px; display: inline-block;">
                            <small style="color: #2d5016; font-weight: bold;">${doula.compatibility_percentage}% Match</small>
                        </div>
                    </div>
                    <div style="text-align: center;">
                        <a href="https://calendly.com/snugkisses/doula-meetgreet?doula=${doula.doula_id}&client=${clientData.crm_id}" 
                           style="background: #2c5aa0; color: white; padding: 8px 16px; text-decoration: none; border-radius: 20px; font-size: 14px; display: inline-block;">
                            Schedule Call
                        </a>
                    </div>
                </div>
            </div>
        `).join('');

        return `
        <div style="font-family: Arial, sans-serif; max-width: 650px; margin: 0 auto; background: #fafafa; padding: 20px;">
            <header style="background: linear-gradient(135deg, #2c5aa0, #1976d2); padding: 25px; text-align: center; border-radius: 12px; color: white;">
                <h1 style="margin: 0; font-size: 26px;">Time to Meet Your Doulas! üìÖ</h1>
                <p style="margin: 10px 0 0 0; opacity: 0.9;">Schedule your 15-minute meet-and-greets</p>
            </header>
            
            <main style="padding: 20px 0;">
                <div style="background: white; padding: 25px; border-radius: 12px; margin-bottom: 20px;">
                    <h2 style="color: #2c5aa0; margin-top: 0;">Hi ${clientData.first_name}! üëã</h2>
                    
                    <p style="line-height: 1.6; color: #333;">
                        Great news! Your matched doulas have reviewed your preferences and are excited to meet you. 
                        We recommend scheduling brief 15-minute video calls with 2-3 doulas to find your perfect match.
                    </p>
                    
                    <div style="background: #fff3e0; padding: 15px; border-radius: 8px; margin: 20px 0;">
                        <h4 style="margin-top: 0; color: #e65100;">üí° Meet-and-Greet Tips:</h4>
                        <ul style="margin: 5px 0; line-height: 1.5; color: #333;">
                            <li>Trust your instincts - you'll know when it feels right!</li>
                            <li>Ask about their birth philosophy and approach</li>
                            <li>Discuss your specific needs and concerns</li>
                            <li>Most clients schedule 2-3 calls to compare</li>
                        </ul>
                    </div>
                </div>
                
                <h3 style="color: #8b4513; text-align: center; margin: 25px 0;">Choose Your Meet-and-Greets</h3>
                
                ${doulaOptionsHtml}
                
                <div style="background: #e3f2fd; padding: 20px; border-radius: 12px; margin: 25px 0;">
                    <h3 style="color: #1976d2; margin-top: 0;">üìã How It Works:</h3>
                    <ol style="line-height: 1.6; color: #333;">
                        <li><strong>Click "Schedule Call"</strong> for the doulas you'd like to meet</li>
                        <li><strong>Choose your preferred time</strong> - morning, afternoon, or evening</li>
                        <li><strong>Join the video call</strong> - link will be sent 24 hours before</li>
                        <li><strong>Ask questions</strong> and see who feels like the right fit</li>
                        <li><strong>Make your selection</strong> - we'll help finalize everything</li>
                    </ol>
                </div>
                
                <div style="background: #f0f8ff; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #2c5aa0;">
                    <h4 style="margin-top: 0; color: #2c5aa0;">üéØ Suggested Questions to Ask:</h4>
                    <ul style="line-height: 1.5; color: #333; margin: 10px 0;">
                        <li>What's your approach to supporting my birth plan?</li>
                        <li>How do you work with partners during labor?</li>
                        <li>Can you share a recent positive birth experience?</li>
                        <li>What does your postpartum support include?</li>
                        <li>How do you handle unexpected situations?</li>
                        <li>What makes you passionate about this work?</li>
                    </ul>
                </div>
                
                <div style="background: #e8f5e8; padding: 20px; border-radius: 8px; margin: 20px 0;">
                    <h4 style="margin-top: 0; color: #2d5016;">‚è∞ Scheduling Guidelines:</h4>
                    <ul style="line-height: 1.5; color: #333;">
                        <li><strong>Duration:</strong> 15 minutes per call (perfect for first impressions)</li>
                        <li><strong>Format:</strong> Video call (Zoom links provided)</li>
                        <li><strong>Timing:</strong> Schedule within next 3-5 days for best availability</li>
                        <li><strong>Flexibility:</strong> Easy to reschedule if needed</li>
                    </ul>
                </div>
                
                <div style="text-align: center; margin: 30px 0; padding: 20px; background: white; border-radius: 12px;">
                    <h3 style="color: #8b4513; margin-top: 0;">Need Help Deciding? ü§î</h3>
                    <p style="color: #666; margin-bottom: 20px;">
                        Our care coordinators are here to help! We can provide additional insights 
                        about each doula or help you narrow down your choices.
                    </p>
                    <a href="mailto:hello@snugandkisses.com?subject=Help with Doula Selection" 
                       style="background: #8b4513; color: white; padding: 12px 25px; text-decoration: none; border-radius: 25px; display: inline-block; font-weight: bold;">
                        Get Selection Help üí¨
                    </a>
                </div>
                
                <p style="text-align: center; margin: 25px 0; color: #666;">
                    Questions about scheduling? Call us at <strong>(555) 123-4567</strong><br>
                    We're here to make this process as smooth as possible! üíù
                </p>
            </main>
            
            <footer style="text-align: center; padding: 20px; color: #666; border-top: 1px solid #e0e0e0;">
                <p style="margin: 0;">
                    <strong>Snug & Kisses</strong> ‚Ä¢ Exceptional Postpartum Care<br>
                    hello@snugandkisses.com ‚Ä¢ (555) 123-4567
                </p>
            </footer>
        </div>`;
    }

    /**
     * Handle Meet-and-Greet Booking
     */
    async handleMeetGreetBooking(bookingData) {
        try {
            // Extract doula and client information
            const doulaId = bookingData.custom_fields.doula_selection;
            const clientId = bookingData.customer.external_id;
            
            // Get doula details
            const doulaTable = this.datastore.table('doula_profiles');
            const doula = await doulaTable.getRow(doulaId);
            
            // Create CRM activity record
            await this.logMeetGreetBooking(clientId, doula, bookingData);
            
            // Send confirmation emails to both parties
            await this.sendMeetGreetConfirmations(bookingData, doula);
            
            // Schedule automated follow-up
            await this.scheduleMeetGreetFollowup(clientId, doulaId, bookingData.appointment_date);
            
            console.log(`‚úÖ Meet-and-greet scheduled: Client ${clientId} with ${doula.first_name}`);
            
            return {
                success: true,
                booking_id: bookingData.booking_id,
                doula_name: `${doula.first_name} ${doula.last_name}`,
                appointment_time: bookingData.appointment_date
            };
            
        } catch (error) {
            console.error("‚ùå Meet-and-greet booking failed:", error);
            throw error;
        }
    }

    /**
     * Send Meet-and-Greet Confirmations
     */
    async sendMeetGreetConfirmations(bookingData, doula) {
        // Client confirmation
        const clientEmailConfig = {
            to: [{ 
                email: bookingData.customer.email, 
                name: bookingData.customer.first_name 
            }],
            from: { 
                email: "hello@snugandkisses.com", 
                name: "Snug & Kisses Care Team" 
            },
            subject: `Your meet-and-greet with ${doula.first_name} is confirmed! üéâ`,
            html_body: this.generateClientConfirmationEmail(bookingData, doula)
        };

        // Doula notification
        const doulaEmailConfig = {
            to: [{ 
                email: doula.email, 
                name: `${doula.first_name} ${doula.last_name}` 
            }],
            from: { 
                email: "team@snugandkisses.com", 
                name: "Snug & Kisses Coordination Team" 
            },
            subject: `New meet-and-greet scheduled: ${bookingData.customer.first_name}`,
            html_body: this.generateDoulaNotificationEmail(bookingData, doula)
        };

        await Promise.all([
            this.mail.sendMail(clientEmailConfig),
            this.mail.sendMail(doulaEmailConfig)
        ]);
    }

    /**
     * Generate Client Confirmation Email
     */
    generateClientConfirmationEmail(bookingData, doula) {
        return `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <header style="background: #e8f5e8; padding: 20px; text-align: center; border-radius: 12px;">
                <h1 style="color: #2d5016; margin: 0;">Meet-and-Greet Confirmed! üéâ</h1>
                <p style="color: #666; margin: 5px 0;">You're one step closer to finding your perfect doula</p>
            </header>
            
            <main style="padding: 25px 20px;">
                <h2 style="color: #2d5016;">Hi ${bookingData.customer.first_name}! üëã</h2>
                
                <p>Wonderful news! Your meet-and-greet with <strong>${doula.first_name} ${doula.last_name}</strong> is all set.</p>
                
                <div style="background: #f0f8ff; padding: 20px; border-radius: 8px; margin: 20px 0;">
                    <h3 style="margin-top: 0; color: #2c5aa0;">üìÖ Meeting Details</h3>
                    <p><strong>Date & Time:</strong> ${bookingData.appointment_date}</p>
                    <p><strong>Duration:</strong> 15 minutes</p>
                    <p><strong>Format:</strong> Video call (Zoom link below)</p>
                    <p><strong>Doula:</strong> ${doula.first_name} ${doula.last_name}</p>
                </div>
                
                <div style="background: #fff3e0; padding: 15px; border-radius: 8px; margin: 20px 0;">
                    <h4 style="margin-top: 0; color: #e65100;">üîó Video Call Link:</h4>
                    <p style="margin: 0;"><a href="${bookingData.meeting_link}" style="color: #2c5aa0; font-weight: bold;">Join Zoom Meeting</a></p>
                    <p style="margin: 5px 0 0 0; font-size: 14px; color: #666;">Link will also be sent 30 minutes before your meeting</p>
                </div>
                
                <p>Looking forward to this connection! Trust your instincts - you'll know if it's the right fit. ‚ú®</p>
            </main>
        </div>`;
    }

    /**
     * Generate Doula Notification Email
     */
    generateDoulaNotificationEmail(bookingData, doula) {
        return `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #8b4513;">New Meet-and-Greet Scheduled</h2>
            <p>Hi ${doula.first_name},</p>
            <p>You have a new meet-and-greet scheduled with potential client <strong>${bookingData.customer.first_name}</strong>.</p>
            <div style="background: #f8f4f1; padding: 15px; border-radius: 8px;">
                <p><strong>Date & Time:</strong> ${bookingData.appointment_date}</p>
                <p><strong>Client:</strong> ${bookingData.customer.first_name} ${bookingData.customer.last_name}</p>
                <p><strong>Due Date:</strong> ${bookingData.custom_fields.due_date || 'Not specified'}</p>
                <p><strong>Meeting Link:</strong> <a href="${bookingData.meeting_link}">Join Zoom</a></p>
            </div>
            <p>Client's questions: ${bookingData.custom_fields.questions || 'General consultation'}</p>
        </div>`;
    }

    /**
     * Log Meet-and-Greet Activity in CRM
     */
    async logMeetGreetBooking(clientId, doula, bookingData) {
        const activityData = {
            module: "Activities",
            data: {
                "Subject": `Phase 5: Meet-and-Greet Scheduled with ${doula.first_name} ${doula.last_name}`,
                "Activity_Type": "Meeting",
                "Status": "Scheduled",
                "What_Id": clientId,
                "Activity_DateTime": bookingData.appointment_date,
                "Description": `15-minute video meet-and-greet scheduled. Doula: ${doula.first_name} ${doula.last_name} (${doula.doula_id})`
            }
        };
        
        await this.crm.insertRecords(activityData);
    }

    /**
     * Schedule Follow-up After Meet-and-Greet
     */
    async scheduleMeetGreetFollowup(clientId, doulaId, appointmentDate) {
        const followupTime = new Date(appointmentDate);
        followupTime.setHours(followupTime.getHours() + 2); // 2 hours after meeting
        
        const followupRecord = {
            client_id: clientId,
            doula_id: doulaId,
            appointment_date: appointmentDate,
            followup_scheduled: followupTime.toISOString(),
            status: 'scheduled',
            followup_type: 'post_meetgreet'
        };
        
        const followupTable = this.datastore.table('scheduled_followups');
        await followupTable.insertRow(followupRecord);
        
        console.log(`üìÖ Follow-up scheduled for ${followupTime}`);
    }

    /**
     * Process Meet-and-Greet Follow-ups
     */
    async processMeetGreetFollowups() {
        const followupTable = this.datastore.table('scheduled_followups');
        const currentTime = new Date().toISOString();
        
        const dueFollowups = await followupTable.getAllRows({
            filter: {
                status: 'scheduled',
                followup_scheduled: { $lte: currentTime },
                followup_type: 'post_meetgreet'
            }
        });

        for (const followup of dueFollowups) {
            try {
                await this.sendMeetGreetFollowupEmail(followup);
                
                // Update status
                await followupTable.updateRow({
                    ROWID: followup.ROWID,
                    status: 'sent',
                    sent_time: new Date().toISOString()
                });
                
                console.log(`‚úÖ Meet-and-greet follow-up sent for client ${followup.client_id}`);
            } catch (error) {
                console.error(`‚ùå Follow-up failed:`, error);
            }
        }
    }

    /**
     * Send Post Meet-and-Greet Follow-up
     */
    async sendMeetGreetFollowupEmail(followupData) {
        // Get client details from CRM
        const clientRecord = await this.crm.getRecordById("Leads", followupData.client_id);
        const doulaTable = this.datastore.table('doula_profiles');
        const doula = await doulaTable.getRow(followupData.doula_id);
        
        const followupEmailHtml = `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #8b4513;">How was your meet-and-greet? üí≠</h2>
            <p>Hi ${clientRecord.data[0].First_Name},</p>
            <p>We hope your conversation with ${doula.first_name} went wonderfully! We'd love to hear about your experience.</p>
            
            <div style="text-align: center; margin: 20px 0;">
                <a href="mailto:hello@snugandkisses.com?subject=Feedback on ${doula.first_name} Meet-and-Greet" 
                   style="background: #2c5aa0; color: white; padding: 12px 25px; text-decoration: none; border-radius: 25px; margin: 0 10px;">
                    Share Feedback
                </a>
                <a href="https://calendly.com/snugkisses/doula-selection?client=${followupData.client_id}" 
                   style="background: #8b4513; color: white; padding: 12px 25px; text-decoration: none; border-radius: 25px; margin: 0 10px;">
                    Ready to Choose?
                </a>
            </div>
            
            <p>Remember: Trust your instincts! The right doula will feel like a natural fit. üíù</p>
        </div>`;

        const emailConfig = {
            to: [{ 
                email: clientRecord.data[0].Email, 
                name: clientRecord.data[0].First_Name 
            }],
            from: { 
                email: "hello@snugandkisses.com", 
                name: "Snug & Kisses Care Team" 
            },
            subject: `How was your chat with ${doula.first_name}? üí≠`,
            html_body: followupEmailHtml
        };

        return await this.mail.sendMail(emailConfig);
    }
}

module.exports = InterviewCoordinationWorkflow;

// Catalyst Function Handler
const coordinationWorkflow = new InterviewCoordinationWorkflow();

exports.handler = async (event, context) => {
    try {
        const { action, data } = JSON.parse(event.body || '{}');
        
        switch (action) {
            case 'initialize_service':
                return await coordinationWorkflow.initializeCoordinationService();
                
            case 'send_coordination_email':
                return await coordinationWorkflow.sendInterviewCoordinationEmail(
                    data.client_data, 
                    data.matched_doulas
                );
                
            case 'handle_booking':
                return await coordinationWorkflow.handleMeetGreetBooking(data.booking_data);
                
            case 'process_followups':
                return await coordinationWorkflow.processMeetGreetFollowups();
                
            default:
                return { 
                    statusCode: 400, 
                    body: JSON.stringify({ error: 'Invalid action' }) 
                };
        }
    } catch (error) {
        console.error("‚ùå Interview Coordination Error:", error);
        return { 
            statusCode: 500, 
            body: JSON.stringify({ error: error.message }) 
        };
    }
};

// Cron Handler for follow-ups
exports.cronHandler = async (cronEvent, context) => {
    console.log("‚è∞ Meet-and-Greet Follow-up Cron Triggered");
    return await coordinationWorkflow.processMeetGreetFollowups();
};